<?php

namespace Database\Factories;

use App\Models\Branch;
use App\Models\Role;
use Illuminate\Database\Eloquent\Factories\Factory;
use Illuminate\Support\Arr;
use Illuminate\Support\Carbon;
use Illuminate\Support\Str;

/**
 * @see \App\Models\User
 */
class UserFactory extends Factory
{
    /**
     * {@inheritDoc}
     */
    public function definition()
    {
        return [
            'username' => $this->faker->userName(),
            'name' => $this->faker->name(),
            'email' => $this->faker->unique()->safeEmail(),
            'email_verified_at' => Carbon::now(),
            'password' => 'password',
            'remember_token' => Str::random(10),
            'is_verified' => $this->faker->boolean(),
        ];
    }

    /**
     * Indicate that the model's email address should be unverified.
     *
     * @return static
     */
    public function unverified()
    {
        return $this->state(function (array $attributes) {
            return [
                'email_verified_at' => null,
                'is_verified' => false,
            ];
        });
    }

    /**
     * Indicate that the model's email address should be verified.
     *
     * @return static
     */
    public function verified()
    {
        return $this->state(function (array $attributes) {
            return [
                'email_verified_at' => Carbon::now(),
                'is_verified' => true,
            ];
        });
    }

    /**
     * Get the raw attributes generated by the factory for form purposes.
     *
     * @param  \App\Models\Branch|null  $branch
     * @return array
     */
    public function rawForm(Branch $branch = null): array
    {
        $data = $this->raw();

        if ($branch) {
            $data['branch_id'] = $branch->getKey();
        }

        return array_merge($data, [
            'password_confirmation' => $data['password'],
            'role' => Arr::random([Role::ROLE_ADMIN, Role::ROLE_STAFF]),
        ]);
    }
}
